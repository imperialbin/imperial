// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// thanks prisma - devlooskie
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  package  = db
}

generator client {
  provider        = "go run github.com/prisma/prisma-client-go"
  previewFeatures = ["referentialActions"]
}

model User {
  id                       String       @id @default(uuid())
  userId                   Int          @default(autoincrement())
  username                 String       @unique
  email                    String       @unique
  banned                   Boolean      @default(false)
  confirmed                Boolean      @default(false)
  icon                     String       @default("/img/pfp.png")
  password                 String
  memberPlus               Boolean      @default(false)
  documentsMade            Int          @default(0)
  activeUnlimitedDocuments Int          @default(0)
  apiToken                 String       @unique
  discordId                String?
  admin                    Boolean      @default(false)
  githubAccess             String?
  opt                      String?
  settings                 UserSettings @relation(fields: [userSettingsId], references: [id])
  userSettingsId           String
}

model UserSettings {
  id               String  @id @default(uuid())
  clipboard        Boolean @default(false)
  longUrls         Boolean @default(false)
  shortUrls        Boolean @default(false)
  instantDelete    Boolean @default(false)
  encrypted        Boolean @default(false)
  imageEmbed       Boolean @default(false)
  expiration       Int     @default(5)
  fontLignatures   Boolean @default(false)
  fontSize         Int     @default(14)
  renderWhitespace Boolean @default(false)
  wordWrap         Boolean @default(false)

  User User[]
  @@map("user_settings")
}

model Document {
  id                 String           @id @default(uuid())
  documentId         String           @unique
  content            String
  creator            String?
  creationDate       DateTime         @default(now())
  expirationDate     DateTime
  documentSettings   DocumentSettings @relation(fields: [documentSettingsId], references: [id], onDelete: Cascade)
  documentSettingsId String
  gist               String?
  views              Int              @default(0)
  encryptedIv        String?
}

model DocumentSettings {
  id            String   @id @default(uuid())
  language      String
  imageEmbed    Boolean
  instantDelete Boolean
  encrypted     Boolean
  public        Boolean
  editors       String[]

  Document Document[]
  @@map("document_settings")
}
