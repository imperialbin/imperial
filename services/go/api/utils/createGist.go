package utils

import (
	"api/models"
	"bytes"
	"encoding/json"
	"fmt"
	"io/ioutil"
	"net/http"

	"github.com/getsentry/sentry-go"
)

type BodyStruct struct {
	Description string `json:"description"`
	Files       Files  `json:"files"`
}

type Files struct {
	Document Document `json:"IMPERIAL-Document"`
}

type Document struct {
	Content string `json:"content"`
}

func CreateGist(user *models.User, id, content string) (gist string, err error) {
	client := http.Client{}
	body, _ := json.Marshal(BodyStruct{
		Description: fmt.Sprintf("IMPERIAL Document %s made by %s. Automatically generated by IMPERIAL", id, user.Username),
		Files: Files{
			Document: Document{
				Content: content,
			},
		},
	})

	req, err := http.NewRequest("POST", "https://api.github.com/gists", bytes.NewBuffer(body))
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("Authorization", "token "+*user.GithubOAuth)

	if err != nil {
		sentry.CaptureException(err)

		return "", err
	}

	makeReq, err := client.Do(req)

	if err != nil {
		sentry.CaptureException(err)

		return "", err
	}

	res := struct {
		ID string `json:"id"`
	}{}
	parsed, reqErr := ioutil.ReadAll(makeReq.Body)
	json.Unmarshal(parsed, &res)

	if reqErr != nil {
		sentry.CaptureException(err)

		return "", err
	}

	return string(res.ID), nil
}
